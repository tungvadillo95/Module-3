// <auto-generated />
using System;
using MedicalDeclaration.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MedicalDeclaration.Migrations
{
    [DbContext(typeof(MedicalDeclarationDb))]
    [Migration("20200911040132_CreateContactAddsTable")]
    partial class CreateContactAddsTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-preview.8.20407.4");

            modelBuilder.Entity("MedicalDeclaration.Models.Entity.Gate", b =>
                {
                    b.Property<int>("GateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("GateName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("GateId");

                    b.ToTable("Gate");
                });

            modelBuilder.Entity("MedicalDeclaration.Models.Entity.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("GenderName")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("GenderId");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("MedicalDeclaration.Models.Entity.InfomationVehicle", b =>
                {
                    b.Property<int>("TravelInformationId")
                        .HasColumnType("int");

                    b.Property<int>("VehiclesId")
                        .HasColumnType("int");

                    b.HasKey("TravelInformationId", "VehiclesId");

                    b.HasIndex("VehiclesId");

                    b.ToTable("InfomationVehicles");
                });

            modelBuilder.Entity("MedicalDeclaration.Models.Entity.PersonalInfomation", b =>
                {
                    b.Property<int>("PersonalInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("GateId")
                        .HasColumnType("int");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("PassportNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PersonalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("YearOfBirth")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PersonalInfoId");

                    b.ToTable("PersonalInfo");
                });

            modelBuilder.Entity("MedicalDeclaration.Models.Entity.TravelInfo", b =>
                {
                    b.Property<int>("TravelInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DepartureDay")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartureLocation_ProvinceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EntryDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("OtherVehicles")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("PlaceOfDestination_ProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("SeatsNumber")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TravelHistory")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("VehicleNumber")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("TravelInformationId");

                    b.ToTable("TravelInformation");
                });

            modelBuilder.Entity("MedicalDeclaration.Models.Entity.Vehicle", b =>
                {
                    b.Property<int>("VehiclesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("VehiclesName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VehiclesId");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("MedicalDeclaration.Models.Entity.VietNamDb.ContactAddress", b =>
                {
                    b.Property<int>("ContactAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<int>("WardId")
                        .HasColumnType("int");

                    b.HasKey("ContactAddressId");

                    b.ToTable("ContactAdds");
                });

            modelBuilder.Entity("MedicalDeclaration.Models.Entity.InfomationVehicle", b =>
                {
                    b.HasOne("MedicalDeclaration.Models.Entity.TravelInfo", "TravelInformation")
                        .WithMany("InfomationVehicles")
                        .HasForeignKey("TravelInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalDeclaration.Models.Entity.Vehicle", "Vehicles")
                        .WithMany("InfomationVehicles")
                        .HasForeignKey("VehiclesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
